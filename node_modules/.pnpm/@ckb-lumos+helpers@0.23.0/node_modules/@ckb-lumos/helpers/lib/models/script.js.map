{"version":3,"file":"script.js","names":["_base","require","_configManager","_","_base2","autoParseAddress","address","startsWith","parseAddress","config","predefined","LINA","AGGRON4","Error","scriptHelper","exports","createModelHelper","pack","val","blockchain","Script","unpack"],"sources":["../../src/models/script.ts"],"sourcesContent":["import { PackParam } from \"@ckb-lumos/codec\";\nimport { Address, Script, blockchain } from \"@ckb-lumos/base\";\nimport { predefined } from \"@ckb-lumos/config-manager\";\nimport { parseAddress } from \"../\";\nimport { createModelHelper } from \"./base\";\n\nexport type PackableScript = PackParam<typeof blockchain.Script>;\nexport type ScriptLike = PackableScript | Address;\n\nfunction autoParseAddress(address: Address): Script {\n  if (address.startsWith(\"ckb\")) {\n    return parseAddress(address, { config: predefined.LINA });\n  } else if (address.startsWith(\"ckt\")) {\n    return parseAddress(address, { config: predefined.AGGRON4 });\n  }\n\n  throw new Error(`The address prefix ${address} is unknown`);\n}\n\nexport const scriptHelper = createModelHelper<Script, ScriptLike>({\n  pack: (val) =>\n    blockchain.Script.pack(\n      typeof val === \"string\" ? autoParseAddress(val) : val\n    ),\n\n  unpack: (val) => blockchain.Script.unpack(val),\n});\n"],"mappings":";;;;;;AACA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,CAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAKA,SAASI,gBAAgBA,CAACC,OAAgB,EAAU;EAClD,IAAIA,OAAO,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;IAC7B,OAAO,IAAAC,cAAY,EAACF,OAAO,EAAE;MAAEG,MAAM,EAAEC,yBAAU,CAACC;IAAK,CAAC,CAAC;EAC3D,CAAC,MAAM,IAAIL,OAAO,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;IACpC,OAAO,IAAAC,cAAY,EAACF,OAAO,EAAE;MAAEG,MAAM,EAAEC,yBAAU,CAACE;IAAQ,CAAC,CAAC;EAC9D;EAEA,MAAM,IAAIC,KAAK,CAAE,sBAAqBP,OAAQ,aAAY,CAAC;AAC7D;AAEO,MAAMQ,YAAY,GAAAC,OAAA,CAAAD,YAAA,GAAG,IAAAE,wBAAiB,EAAqB;EAChEC,IAAI,EAAGC,GAAG,IACRC,gBAAU,CAACC,MAAM,CAACH,IAAI,CACpB,OAAOC,GAAG,KAAK,QAAQ,GAAGb,gBAAgB,CAACa,GAAG,CAAC,GAAGA,GACpD,CAAC;EAEHG,MAAM,EAAGH,GAAG,IAAKC,gBAAU,CAACC,MAAM,CAACC,MAAM,CAACH,GAAG;AAC/C,CAAC,CAAC","ignoreList":[]}