{"version":3,"file":"cell.js","names":["_base","require","_base2","_script","_bi","_codec","_molecule","_blockchain","_index","isCreateCellOptions","val","CellCodec","table","cellOutput","blockchain","CellOutput","data","Bytes","outPoint","option","OutPoint","cellHelper","exports","createModelHelper","pack","model","cell","capacity","BI","from","toHexString","lock","scriptHelper","create","type","outPointHelper","bytes","hexify","eq","minimalCellCapacityCompatible","unpack","value"],"sources":["../../src/models/cell.ts"],"sourcesContent":["import { createModelHelper, ModelHelper } from \"./base\";\nimport { blockchain, Cell } from \"@ckb-lumos/base\";\nimport { scriptHelper, ScriptLike } from \"./script\";\nimport { BI, BIish } from \"@ckb-lumos/bi\";\nimport { bytes, BytesLike, PackParam } from \"@ckb-lumos/codec\";\nimport { option, table } from \"@ckb-lumos/codec/lib/molecule\";\nimport { outPointHelper } from \"./blockchain\";\nimport { minimalCellCapacityCompatible } from \"../index\";\n\ntype CreateCellOptions = {\n  capacity?: BIish;\n  lock: ScriptLike;\n  type?: PackParam<typeof blockchain.Script>;\n  outPoint?: PackParam<typeof blockchain.OutPoint>;\n  data?: BytesLike;\n};\n\ntype CellLike = Cell | CreateCellOptions;\n\nfunction isCreateCellOptions(val: unknown): val is CreateCellOptions {\n  if (!val || typeof val !== \"object\") return false;\n  return \"lock\" in val;\n}\n\nconst CellCodec = table(\n  {\n    cellOutput: blockchain.CellOutput,\n    data: blockchain.Bytes,\n    outPoint: option(blockchain.OutPoint),\n  },\n  [\"cellOutput\", \"data\", \"outPoint\"]\n);\n\n/**\n * A set of helper functions for Cell\n * @example\n * const cell = CellHelper.create({ lock: 'ckb1secp256k1lock' })\n * cell.cellOutput.capacity // == 61 CKB\n */\nexport const cellHelper: ModelHelper<Cell, CellLike> = createModelHelper({\n  pack: (model) => {\n    const cell: Cell = (() => {\n      if (isCreateCellOptions(model)) {\n        return {\n          cellOutput: {\n            capacity: BI.from(model.capacity || \"0x0\").toHexString(),\n            lock: scriptHelper.create(model.lock),\n            type: model.type && scriptHelper.create(model.type),\n          },\n\n          outPoint: model.outPoint && outPointHelper.create(model.outPoint),\n          data: bytes.hexify(model.data || \"0x\"),\n        };\n      }\n\n      return model;\n    })();\n\n    if (BI.from(cell.cellOutput.capacity).eq(0)) {\n      cell.cellOutput.capacity =\n        minimalCellCapacityCompatible(cell).toHexString();\n    }\n\n    return CellCodec.pack(cell);\n  },\n  unpack: (value) => CellCodec.unpack(value),\n});\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,GAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,SAAA,GAAAL,OAAA;AACA,IAAAM,WAAA,GAAAN,OAAA;AACA,IAAAO,MAAA,GAAAP,OAAA;AAYA,SAASQ,mBAAmBA,CAACC,GAAY,EAA4B;EACnE,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE,OAAO,KAAK;EACjD,OAAO,MAAM,IAAIA,GAAG;AACtB;AAEA,MAAMC,SAAS,GAAG,IAAAC,eAAK,EACrB;EACEC,UAAU,EAAEC,iBAAU,CAACC,UAAU;EACjCC,IAAI,EAAEF,iBAAU,CAACG,KAAK;EACtBC,QAAQ,EAAE,IAAAC,gBAAM,EAACL,iBAAU,CAACM,QAAQ;AACtC,CAAC,EACD,CAAC,YAAY,EAAE,MAAM,EAAE,UAAU,CACnC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,UAAuC,GAAAC,OAAA,CAAAD,UAAA,GAAG,IAAAE,uBAAiB,EAAC;EACvEC,IAAI,EAAGC,KAAK,IAAK;IACf,MAAMC,IAAU,GAAG,CAAC,MAAM;MACxB,IAAIjB,mBAAmB,CAACgB,KAAK,CAAC,EAAE;QAC9B,OAAO;UACLZ,UAAU,EAAE;YACVc,QAAQ,EAAEC,MAAE,CAACC,IAAI,CAACJ,KAAK,CAACE,QAAQ,IAAI,KAAK,CAAC,CAACG,WAAW,CAAC,CAAC;YACxDC,IAAI,EAAEC,oBAAY,CAACC,MAAM,CAACR,KAAK,CAACM,IAAI,CAAC;YACrCG,IAAI,EAAET,KAAK,CAACS,IAAI,IAAIF,oBAAY,CAACC,MAAM,CAACR,KAAK,CAACS,IAAI;UACpD,CAAC;UAEDhB,QAAQ,EAAEO,KAAK,CAACP,QAAQ,IAAIiB,0BAAc,CAACF,MAAM,CAACR,KAAK,CAACP,QAAQ,CAAC;UACjEF,IAAI,EAAEoB,YAAK,CAACC,MAAM,CAACZ,KAAK,CAACT,IAAI,IAAI,IAAI;QACvC,CAAC;MACH;MAEA,OAAOS,KAAK;IACd,CAAC,EAAE,CAAC;IAEJ,IAAIG,MAAE,CAACC,IAAI,CAACH,IAAI,CAACb,UAAU,CAACc,QAAQ,CAAC,CAACW,EAAE,CAAC,CAAC,CAAC,EAAE;MAC3CZ,IAAI,CAACb,UAAU,CAACc,QAAQ,GACtB,IAAAY,oCAA6B,EAACb,IAAI,CAAC,CAACI,WAAW,CAAC,CAAC;IACrD;IAEA,OAAOnB,SAAS,CAACa,IAAI,CAACE,IAAI,CAAC;EAC7B,CAAC;EACDc,MAAM,EAAGC,KAAK,IAAK9B,SAAS,CAAC6B,MAAM,CAACC,KAAK;AAC3C,CAAC,CAAC","ignoreList":[]}