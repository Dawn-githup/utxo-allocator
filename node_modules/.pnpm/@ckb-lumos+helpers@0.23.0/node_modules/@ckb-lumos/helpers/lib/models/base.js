"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createModelHelper = createModelHelper;
exports.defaultDeepClone = defaultDeepClone;
var _codec = require("@ckb-lumos/codec");
var _utils = require("@ckb-lumos/base/lib/utils");
/**
 * A helper object that provides common functionalities, such as create(clone), equals, hash, etc. for models.
 */

/**
 * create a {@link ModelHelper} with a {@link BytesCodec}
 * @param codec
 */
function createModelHelper(codec) {
  return {
    create: val => codec.unpack(codec.pack(val)),
    hash: val => _codec.bytes.bytify((0, _utils.ckbHash)(codec.pack(val))),
    equals: (a, b) => _codec.bytes.equal(codec.pack(a), codec.pack(b)),
    clone: defaultDeepClone
  };
}

/**
 * @internal
 */
function defaultDeepClone(value) {
  const valType = typeof value;
  if (valType === "number" || valType === "string" || valType === "boolean" || valType === "bigint" || value == null) {
    return value;
  } else if (Array.isArray(value)) {
    return value.map(defaultDeepClone);
  } else if (valType === "object") {
    return Object.entries(value).reduce((result, [key, value]) => Object.assign(result, {
      [key]: defaultDeepClone(value)
    }), {});
  }
  throw new Error("Cannot clone the value: " + String(value));
}
//# sourceMappingURL=base.js.map