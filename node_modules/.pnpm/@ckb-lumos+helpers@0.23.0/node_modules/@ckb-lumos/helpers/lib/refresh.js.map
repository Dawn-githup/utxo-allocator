{"version":3,"file":"refresh.js","names":["refreshTypeIdCellDeps","txSkeleton","resolve","outPoints","cellDeps","map","outPoint","toArray","latestOutPoints","update","cellDep","i"],"sources":["../src/refresh.ts"],"sourcesContent":["import { TransactionSkeletonType } from \"./\";\nimport type { ResolveLatestOutPointsOfTypeIds } from \"@ckb-lumos/config-manager/lib/refresh\";\n\n/**\n * Refresh cellDeps of txSkeleton\n * @example\n * const resolve = createRpcResolver(rpc)\n * // refresh the cell deps\n * let txSkeleton = await refreshTypeIdCellDeps(txSkeleton,  { resolve })\n * @param txSkeleton\n * @param resolve\n */\nexport async function refreshTypeIdCellDeps(\n  txSkeleton: TransactionSkeletonType,\n  { resolve }: { resolve: ResolveLatestOutPointsOfTypeIds }\n): Promise<TransactionSkeletonType> {\n  const outPoints = txSkeleton.cellDeps\n    .map(({ outPoint }) => outPoint)\n    .toArray();\n\n  const latestOutPoints = await resolve(outPoints);\n\n  return txSkeleton.update(\"cellDeps\", (cellDeps) =>\n    cellDeps.map((cellDep, i) => ({ ...cellDep, outPoint: latestOutPoints[i] }))\n  );\n}\n"],"mappings":";;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeA,qBAAqBA,CACzCC,UAAmC,EACnC;EAAEC;AAAsD,CAAC,EACvB;EAClC,MAAMC,SAAS,GAAGF,UAAU,CAACG,QAAQ,CAClCC,GAAG,CAAC,CAAC;IAAEC;EAAS,CAAC,KAAKA,QAAQ,CAAC,CAC/BC,OAAO,CAAC,CAAC;EAEZ,MAAMC,eAAe,GAAG,MAAMN,OAAO,CAACC,SAAS,CAAC;EAEhD,OAAOF,UAAU,CAACQ,MAAM,CAAC,UAAU,EAAGL,QAAQ,IAC5CA,QAAQ,CAACC,GAAG,CAAC,CAACK,OAAO,EAAEC,CAAC,MAAM;IAAE,GAAGD,OAAO;IAAEJ,QAAQ,EAAEE,eAAe,CAACG,CAAC;EAAE,CAAC,CAAC,CAC7E,CAAC;AACH","ignoreList":[]}