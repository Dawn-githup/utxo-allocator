import { BytesLike, molecule } from '@ckb-lumos/codec';
import { Hash } from '@ckb-lumos/lumos';
export declare const ClusterDataV1: molecule.ObjectLayoutCodec<{
    name: import("@ckb-lumos/codec/lib/base").BytesCodec<string, BytesLike>;
    description: import("@ckb-lumos/codec/lib/base").BytesCodec<string, BytesLike>;
}>;
export declare const ClusterDataV2: molecule.ObjectLayoutCodec<{
    name: import("@ckb-lumos/codec/lib/base").BytesCodec<string, BytesLike>;
    description: import("@ckb-lumos/codec/lib/base").BytesCodec<string, BytesLike>;
    mutantId: molecule.OptionLayoutCodec<import("@ckb-lumos/codec/lib/base").BytesCodec<string, BytesLike>>;
}>;
export interface RawClusterDataV1 {
    name: string;
    description: string;
}
export interface RawClusterDataV2 {
    name: string;
    description: string;
    mutantId?: Hash;
}
export type RawClusterData = RawClusterDataV2;
export type ClusterDataVersion = 'v1' | 'v2';
/**
 * Pack RawClusterData to Uint8Array.
 * Pass an optional "version" field to select a specific packing version.
 */
export declare function packRawClusterData(packable: RawClusterData): Uint8Array;
export declare function packRawClusterData(packable: RawClusterDataV1, version: 'v1'): Uint8Array;
export declare function packRawClusterData(packable: RawClusterDataV2, version: 'v2'): Uint8Array;
export declare function packRawClusterDataV1(packable: RawClusterDataV1): Uint8Array;
export declare function packRawClusterDataV2(packable: RawClusterDataV2): Uint8Array;
/**
 * Unpack Hex/Bytes to RawClusterData.
 * Pass an optional "version" field to select a specific unpacking version.
 */
export declare function unpackToRawClusterData(unpackable: BytesLike): RawClusterData;
export declare function unpackToRawClusterData(unpackable: BytesLike, version: 'v1'): RawClusterDataV1;
export declare function unpackToRawClusterData(unpackable: BytesLike, version: 'v2'): RawClusterDataV2;
export declare function unpackToRawClusterDataV1(unpackable: BytesLike): RawClusterDataV1;
export declare function unpackToRawClusterDataV2(unpackable: BytesLike): RawClusterDataV2;
