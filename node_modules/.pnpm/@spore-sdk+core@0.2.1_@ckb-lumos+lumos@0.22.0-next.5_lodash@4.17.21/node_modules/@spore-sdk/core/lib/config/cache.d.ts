import { Hash } from '@ckb-lumos/base';
import { SporeConfig, SporeScript } from './types';
export interface SporeConfigCache<T extends string = string> {
    hash: Hash;
    config: SporeConfig<T>;
    scriptsByCodeHash: Record<Hash, SporeCategorizedScript>;
    scriptsByTag: Record<T, Record<string, SporeCategorizedScript[]>>;
    scriptsByTags: Record<T, Record<string, SporeCategorizedScript[]>>;
    queryRecordsByTags: Record<T, Record<string, SporeCategorizedScript[]>>;
}
export interface SporeCategorizedScript extends SporeScript {
    name: string;
}
/**
 * Create a SporeCache from SporeConfig and store in cache.
 */
export declare function setSporeConfigCache<T extends string>(config: SporeConfig<T>): void;
/**
 * Get a SporeConfig's corresponding SporeCache.
 * If not exists, create one and store in cache, and then return the new SporeCache.
 */
export declare function getSporeConfigCache<T extends string>(config: SporeConfig<T>): SporeConfigCache<T>;
/**
 * Create a SporeConfigCache from SporeConfig.
 * Will generate mapping info for the scripts to save time when searching.
 */
export declare function createSporeConfigCache<T extends string>(config: SporeConfig<T>): SporeConfigCache<T>;
/**
 * Search for a specific list of SporeScripts by "scriptName" and "tag" in a SporeConfigCache.
 */
export declare function getSporeCacheScriptsByTag<T extends string>(cache: SporeConfigCache<T>, scriptName: T, tag: string): SporeCategorizedScript[] | undefined;
/**
 * Search SporeConfig by "scriptName" and "tags" in a SporeConfigCache.
 */
export declare function getSporeCacheScriptsByTags<T extends string>(cache: SporeConfigCache<T>, scriptName: T, tags: string[]): SporeCategorizedScript[] | undefined;
/**
 * Search for a specific SporeScript by "codeHash" in a SporeCache.
 * If "scriptName" is passed, it also checks whether the name of the target script matches.
 */
export declare function getSporeCacheScriptByCodeHash<T extends string>(cache: SporeConfigCache<T>, codeHash: Hash, scriptName?: T): SporeCategorizedScript | undefined;
