import { BIish } from '@ckb-lumos/bi';
import { FromInfo } from '@ckb-lumos/common-scripts';
import { Address, OutPoint, Script } from '@ckb-lumos/base';
import { BI, Cell, helpers, HexString } from '@ckb-lumos/lumos';
import { SporeConfig } from '../../../config';
import { injectNewClusterAgentOutput } from '../..';
export declare function createClusterAgent(props: {
    clusterProxyOutPoint: OutPoint;
    referenceType: 'cell' | 'payment';
    paymentAmount?: BIish | ((minPayment: BI) => BIish);
    toLock: Script;
    fromInfos: FromInfo[];
    changeAddress?: Address;
    updateOutput?: (cell: Cell) => Cell;
    capacityMargin?: BIish | ((cell: Cell, margin: BI) => BIish);
    clusterProxy?: {
        updateOutput?: (cell: Cell) => Cell;
        capacityMargin?: BIish | ((cell: Cell, margin: BI) => BIish);
        updateWitness?: HexString | ((witness: HexString) => HexString);
    };
    feeRate?: BIish | undefined;
    config?: SporeConfig;
}): Promise<{
    txSkeleton: helpers.TransactionSkeletonType;
    outputIndex: number;
    reference: Awaited<ReturnType<typeof injectNewClusterAgentOutput>>['reference'];
}>;
