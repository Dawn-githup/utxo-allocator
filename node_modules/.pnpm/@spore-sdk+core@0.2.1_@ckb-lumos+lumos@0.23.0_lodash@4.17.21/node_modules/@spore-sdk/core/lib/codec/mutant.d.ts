import { BIish, BI } from '@ckb-lumos/bi';
import { Hash } from '@ckb-lumos/base';
import { BytesLike } from '@ckb-lumos/codec';
export interface PackableMutantArgs {
    id: BytesLike;
    minPayment?: BIish;
}
export interface RawMutantArgs {
    id: Hash;
    minPayment?: BI;
}
export declare const MutantArgsPower: import("@ckb-lumos/codec/lib/base").BytesCodec<RawMutantArgs, PackableMutantArgs>;
export declare const MutantArgsExact: import("@ckb-lumos/codec/lib/base").BytesCodec<RawMutantArgs, PackableMutantArgs>;
export declare function packRawMutantArgs(packable: PackableMutantArgs): Uint8Array;
export declare function packRawMutantArgs(packable: PackableMutantArgs, version: 'power'): Uint8Array;
export declare function packRawMutantArgs(packable: PackableMutantArgs, version: 'exact'): Uint8Array;
export declare function unpackToRawMutantArgs(unpackable: BytesLike): RawMutantArgs;
export declare function unpackToRawMutantArgs(unpackable: BytesLike, version: 'power'): RawMutantArgs;
export declare function unpackToRawMutantArgs(unpackable: BytesLike, version: 'exact'): RawMutantArgs;
