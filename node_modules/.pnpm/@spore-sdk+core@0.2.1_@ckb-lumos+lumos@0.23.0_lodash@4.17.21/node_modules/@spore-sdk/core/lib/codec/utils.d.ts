import { BytesLike, molecule, number } from '@ckb-lumos/codec';
export declare const ScriptId: molecule.ObjectLayoutCodec<{
    codeHash: import("@ckb-lumos/codec/lib/base").FixedBytesCodec<string, BytesLike>;
    hashType: import("@ckb-lumos/codec/lib/base").FixedBytesCodec<import("@ckb-lumos/base").HashType, import("@ckb-lumos/base").HashType>;
}> & import("@ckb-lumos/codec/lib/base").Fixed;
export declare const Uint8Opt: molecule.OptionLayoutCodec<import("@ckb-lumos/codec/lib/base").FixedBytesCodec<number, number.BIish>>;
export declare const Uint32Opt: molecule.OptionLayoutCodec<import("@ckb-lumos/codec/lib/base").FixedBytesCodec<number, number.BIish>>;
export declare const Uint64Opt: molecule.OptionLayoutCodec<import("@ckb-lumos/codec/lib/base").FixedBytesCodec<number.BI, number.BIish>>;
export declare const Hash: import("@ckb-lumos/codec/lib/base").FixedBytesCodec<string, BytesLike>;
/**
 * The codec for packing/unpacking UTF-8 raw strings.
 * Should be packed like so: String.pack('something')
 */
export declare const RawString: import("@ckb-lumos/codec/lib/base").BytesCodec<string, string>;
