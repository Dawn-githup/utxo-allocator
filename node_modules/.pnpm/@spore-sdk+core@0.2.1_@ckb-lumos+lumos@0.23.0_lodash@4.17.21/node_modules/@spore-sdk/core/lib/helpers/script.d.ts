import { Config } from '@ckb-lumos/config-manager';
import { Address, Script } from '@ckb-lumos/base';
import { FromInfo } from '@ckb-lumos/common-scripts';
import { ScriptId } from '../types';
/**
 * Compare two scripts to see if they are identical.
 */
export declare function isScriptValueEquals(a: Script, b: Script): boolean;
/**
 * Compare two scripts to see if their 'codeHash' and 'hashType' are the same.
 */
export declare function isScriptIdEquals(a: ScriptId, b: ScriptId): boolean;
/**
 * Get change lock of a transaction.
 */
export declare function getChangeLock(fromInfos: FromInfo[], changeAddress?: Address, config?: Config): Script;
/**
 * Assemble locks of Transaction.inputs.
 */
export declare function composeInputLocks(props: {
    fromInfos: FromInfo[];
    inputLocks?: Script[];
    config?: Config;
}): Script[];
/**
 * Assemble possible locks of Transaction.outputs.
 */
export declare function composeOutputLocks(props: {
    fromInfos: FromInfo[];
    outputLocks?: Script[];
    changeAddress?: Address;
    config?: Config;
}): Script[];
