{"version":3,"file":"rpc.js","names":["_rpc","require","_resultFormatter","_crossFetch","_interopRequireDefault","obj","__esModule","default","LightClientRPC","constructor","uri","getTipHeader","ResultFormatter","toHeader","request","getPeers","toPeers","localNodeInfo","toLocalNodeInfo","fetchHeader","blockHash","params","toFetchHeaderResult","getHeader","fetchTransaction","txHash","toFetchTransactionResult","getTransaction","toTransactionWithStatus","sendTransaction","tx","ParamsFormatter","toRawTransaction","toHash","getScripts","map","toLightClientScript","setScripts","scripts","command","script","scriptType","blockNumber","toScript","script_type","block_number","getCells","searchKey","order","limit","cursor","toGetCellsSearchKey","toGetCellsResult","getCellsCapacity","toSearchKey","toCellsCapacity","getGenesisBlock","toBlock","getTransactions","toGetTransactionsSearchKey","toGetTransactionsResult","exports","ckbIndexerUrl","method","res","fetch","body","JSON","stringify","id","jsonrpc","headers","status","Error","data","json","error","undefined","result"],"sources":["../src/rpc.ts"],"sourcesContent":["import { CKBComponents } from \"@ckb-lumos/rpc/lib/types/api\";\nimport { RPC } from \"@ckb-lumos/rpc/lib/types/rpc\";\nimport { ParamsFormatter, ResultFormatter } from \"@ckb-lumos/rpc\";\nimport type {\n  FetchHeaderResult,\n  FetchTransactionResult,\n  LightClientScript,\n  SetScriptCommand,\n  LightClientRPC as LightClientRPCType,\n} from \"./type\";\nimport {\n  toFetchHeaderResult,\n  toFetchTransactionResult,\n  toLightClientScript,\n} from \"./resultFormatter\";\nimport fetch from \"cross-fetch\";\n\n/* c8 ignore next 100 */\nexport class LightClientRPC {\n  /**\n   *\n   * @param uri light client uri\n   */\n  constructor(private uri: string) {}\n\n  async getTipHeader(): Promise<CKBComponents.BlockHeader> {\n    return ResultFormatter.toHeader(await request(this.uri, \"get_tip_header\"));\n  }\n\n  async getPeers(): Promise<Array<CKBComponents.RemoteNodeInfo>> {\n    return ResultFormatter.toPeers(await request(this.uri, \"get_peers\"));\n  }\n\n  async localNodeInfo(): Promise<CKBComponents.LocalNodeInfo> {\n    return ResultFormatter.toLocalNodeInfo(\n      await request(this.uri, \"local_node_info\")\n    );\n  }\n\n  async fetchHeader(blockHash: string): Promise<FetchHeaderResult> {\n    const params = [blockHash];\n    return toFetchHeaderResult(await request(this.uri, \"fetch_header\", params));\n  }\n\n  async getHeader(blockHash: string): Promise<CKBComponents.BlockHeader> {\n    const params = [blockHash];\n    return ResultFormatter.toHeader(\n      await request(this.uri, \"get_header\", params)\n    );\n  }\n\n  async fetchTransaction(txHash: string): Promise<FetchTransactionResult> {\n    const params = [txHash];\n    return toFetchTransactionResult(\n      await request(this.uri, \"fetch_transaction\", params)\n    );\n  }\n\n  async getTransaction(\n    txHash: string\n  ): Promise<CKBComponents.TransactionWithStatus> {\n    const params = [txHash];\n    return ResultFormatter.toTransactionWithStatus(\n      await request(this.uri, \"get_transaction\", params)\n    );\n  }\n\n  async sendTransaction(\n    tx: CKBComponents.RawTransaction\n  ): Promise<CKBComponents.Hash> {\n    const params = [ParamsFormatter.toRawTransaction(tx)];\n    return ResultFormatter.toHash(\n      await request(this.uri, \"send_transaction\", params)\n    );\n  }\n\n  async getScripts(): Promise<Array<LightClientScript>> {\n    return (\n      await request<[], LightClientRPCType.LightClientScript[]>(\n        this.uri,\n        \"get_scripts\"\n      )\n    ).map(toLightClientScript);\n  }\n\n  async setScripts(\n    scripts: Array<LightClientScript>,\n    command?: SetScriptCommand\n  ): Promise<void> {\n    const params = [\n      scripts.map(({ script, scriptType, blockNumber }) => ({\n        script: ParamsFormatter.toScript(script),\n        script_type: scriptType,\n        block_number: blockNumber,\n      })),\n      command,\n    ];\n    await request(this.uri, \"set_scripts\", params);\n  }\n\n  async getCells<WithData extends boolean = true>(\n    searchKey: CKBComponents.GetCellsSearchKey<WithData>,\n    order: CKBComponents.Order,\n    limit: CKBComponents.UInt32,\n    cursor?: string\n  ): Promise<CKBComponents.GetLiveCellsResult<WithData>> {\n    const params = [\n      ParamsFormatter.toGetCellsSearchKey(searchKey),\n      order,\n      limit,\n      cursor,\n    ];\n    return ResultFormatter.toGetCellsResult<WithData>(\n      await request(this.uri, \"get_cells\", params)\n    );\n  }\n\n  async getCellsCapacity(\n    searchKey: CKBComponents.SearchKey\n  ): Promise<CKBComponents.CellsCapacity> {\n    const params = [ParamsFormatter.toSearchKey(searchKey)];\n    return ResultFormatter.toCellsCapacity(\n      await request(this.uri, \"get_cells_capacity\", params)\n    );\n  }\n\n  async getGenesisBlock(): Promise<CKBComponents.Block> {\n    return ResultFormatter.toBlock(\n      await request<[], RPC.Block>(this.uri, \"get_genesis_block\")\n    );\n  }\n\n  async getTransactions<Grouped extends boolean = false>(\n    searchKey: CKBComponents.GetTransactionsSearchKey<Grouped>,\n    order: CKBComponents.Order,\n    limit: CKBComponents.UInt32,\n    cursor?: string\n  ): Promise<CKBComponents.GetTransactionsResult<Grouped>> {\n    const params = [\n      ParamsFormatter.toGetTransactionsSearchKey(searchKey),\n      order,\n      limit,\n      cursor,\n    ];\n    return ResultFormatter.toGetTransactionsResult(\n      await request(this.uri, \"get_transactions\", params)\n    );\n  }\n}\n\nconst request = async <P, R>(\n  ckbIndexerUrl: string,\n  method: string,\n  params?: P\n): Promise<R> => {\n  const res = await fetch(ckbIndexerUrl, {\n    method: \"POST\",\n    body: JSON.stringify({\n      id: 0,\n      jsonrpc: \"2.0\",\n      method,\n      params,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  if (res.status !== 200) {\n    throw new Error(`indexer request failed with HTTP code ${res.status}`);\n  }\n  const data = await res.json();\n  if (data.error !== undefined) {\n    throw new Error(\n      `indexer request rpc failed with error: ${JSON.stringify(data.error)}`\n    );\n  }\n  return data.result;\n};\n/* eslint-enalbe @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types */\n"],"mappings":"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","ignoreList":[]}