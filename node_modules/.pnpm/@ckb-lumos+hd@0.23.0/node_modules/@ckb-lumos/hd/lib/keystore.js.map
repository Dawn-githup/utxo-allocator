{"version":3,"file":"keystore.js","names":["_crypto","_interopRequireDefault","require","_sha","_uuid","_extended_key","_scryptJs","obj","__esModule","default","UnsupportedCipher","Error","constructor","exports","IncorrectPassword","InvalidKeystore","CIPHER","CKB_CLI_ORIGIN","DEFAULT_SCRIPT_PARAM_r","DEFAULT_SCRIPT_PARAM_p","DEFAULT_SCRYPT_PARAM_N","Keystore","version","theCrypto","id","origin","crypto","fromJson","json","object","JSON","parse","toJson","stringify","isFromCkbCli","createEmpty","saltSize","salt","randomBytes","iv","kdfparams","dklen","toString","n","r","p","ciphertext","cipherparams","cipher","kdf","mac","uuid","create","extendedPrivateKey","password","options","ivSize","derivedKey","Buffer","from","syncScrypt","createCipheriv","slice","hexPrefixSize","concat","update","serialize","final","isEmpty","decrypt","decipher","createDecipheriv","ExtendedPrivateKey","checkPassword","keccakSize","Keccak","subarray","digest","scryptOptions","N","maxmem"],"sources":["../src/keystore.ts"],"sourcesContent":["import crypto from \"crypto\";\nimport { Keccak } from \"sha3\";\nimport { v4 as uuid } from \"uuid\";\nimport { ExtendedPrivateKey } from \"./extended_key\";\nimport { HexString } from \"@ckb-lumos/base\";\nimport { syncScrypt } from \"scrypt-js\";\n\nexport type HexStringWithoutPrefix = string;\n\nexport class UnsupportedCipher extends Error {\n  constructor() {\n    super(\"Unsupported cipher!\");\n  }\n}\n\nexport class IncorrectPassword extends Error {\n  constructor() {\n    super(\"Incorrect password!\");\n  }\n}\n\nexport class InvalidKeystore extends Error {\n  constructor() {\n    super(\"Invalid keystore, please check your file integrity.\");\n  }\n}\n\nconst CIPHER = \"aes-128-ctr\";\nconst CKB_CLI_ORIGIN = \"ckb-cli\";\n\ninterface CipherParams {\n  iv: HexStringWithoutPrefix;\n}\n\ninterface KdfParams {\n  dklen: number;\n  n: number;\n  r: number;\n  p: number;\n  salt: HexStringWithoutPrefix;\n}\n\ninterface Crypto {\n  cipher: string;\n  cipherparams: CipherParams;\n  ciphertext: HexStringWithoutPrefix;\n  kdf: string;\n  kdfparams: KdfParams;\n  mac: HexStringWithoutPrefix;\n}\n\n// The parameter r (\"blockSize\")\n//    specifies the block size.\nconst DEFAULT_SCRIPT_PARAM_r = 8;\n// The parallelization parameter p\n//    (\"parallelizationParameter\") is a positive integer less than or equal\n//    to ((2^32-1) * 32) / (128 * r)\nconst DEFAULT_SCRIPT_PARAM_p = 1;\n// The CPU/Memory cost parameter N\n//    (\"costParameter\") must be larger than 1, a power of 2, and less than\n//    2^(128 * r / 8)\nconst DEFAULT_SCRYPT_PARAM_N = 262144;\n\n// Encrypt and save master extended private key.\nexport default class Keystore {\n  crypto: Crypto;\n  id: string;\n  version = 3;\n  origin: string | undefined;\n\n  constructor(theCrypto: Crypto, id: string, origin?: string) {\n    this.crypto = theCrypto;\n    this.id = id;\n    this.origin = origin;\n  }\n\n  static fromJson(json: string): Keystore {\n    try {\n      const object = JSON.parse(json);\n      return new Keystore(object.crypto, object.id, object.origin);\n    } catch {\n      throw new InvalidKeystore();\n    }\n  }\n\n  toJson(): string {\n    return JSON.stringify(this);\n  }\n\n  isFromCkbCli(): boolean {\n    return this.origin === CKB_CLI_ORIGIN;\n  }\n\n  // Create an empty keystore object that contains empty private key\n  static createEmpty(): Keystore {\n    const saltSize = 32;\n    const salt: Buffer = crypto.randomBytes(saltSize);\n    const iv: Buffer = crypto.randomBytes(16);\n    const kdfparams: KdfParams = {\n      dklen: 32,\n      salt: salt.toString(\"hex\"),\n      n: DEFAULT_SCRYPT_PARAM_N,\n      r: DEFAULT_SCRIPT_PARAM_r,\n      p: DEFAULT_SCRIPT_PARAM_p,\n    };\n    return new Keystore(\n      {\n        ciphertext: \"\",\n        cipherparams: {\n          iv: iv.toString(\"hex\"),\n        },\n        cipher: CIPHER,\n        kdf: \"scrypt\",\n        kdfparams,\n        mac: \"\",\n      },\n      uuid()\n    );\n  }\n\n  static create(\n    extendedPrivateKey: ExtendedPrivateKey,\n    password: string,\n    options: { salt?: Buffer; iv?: Buffer } = {}\n  ): Keystore {\n    const saltSize = 32;\n    const ivSize = 16;\n    const salt: Buffer = options.salt || crypto.randomBytes(saltSize);\n    const iv: Buffer = options.iv || crypto.randomBytes(ivSize);\n    const kdfparams: KdfParams = {\n      dklen: 32,\n      salt: salt.toString(\"hex\"),\n      n: DEFAULT_SCRYPT_PARAM_N,\n      r: DEFAULT_SCRIPT_PARAM_r,\n      p: DEFAULT_SCRIPT_PARAM_p,\n    };\n    const derivedKey: Buffer = Buffer.from(\n      syncScrypt(\n        Buffer.from(password),\n        salt,\n        kdfparams.n,\n        kdfparams.r,\n        kdfparams.p,\n        kdfparams.dklen\n      )\n    );\n\n    const cipher: crypto.Cipher = crypto.createCipheriv(\n      CIPHER,\n      derivedKey.slice(0, 16),\n      iv\n    );\n    if (!cipher) {\n      throw new UnsupportedCipher();\n    }\n\n    // size of 0x prefix\n    const hexPrefixSize = 2;\n    const ciphertext: Buffer = Buffer.concat([\n      cipher.update(\n        Buffer.from(extendedPrivateKey.serialize().slice(hexPrefixSize), \"hex\")\n      ),\n      cipher.final(),\n    ]);\n\n    return new Keystore(\n      {\n        ciphertext: ciphertext.toString(\"hex\"),\n        cipherparams: {\n          iv: iv.toString(\"hex\"),\n        },\n        cipher: CIPHER,\n        kdf: \"scrypt\",\n        kdfparams,\n        mac: Keystore.mac(derivedKey, ciphertext),\n      },\n      uuid()\n    );\n  }\n\n  // Imported from xpub with empty private key.\n  isEmpty(): boolean {\n    return this.crypto.ciphertext === \"\" && this.crypto.mac === \"\";\n  }\n\n  // Decrypt and return serialized extended private key.\n  decrypt(password: string): HexString {\n    const derivedKey = this.derivedKey(password);\n    const ciphertext = Buffer.from(this.crypto.ciphertext, \"hex\");\n    if (Keystore.mac(derivedKey, ciphertext) !== this.crypto.mac) {\n      throw new IncorrectPassword();\n    }\n    const decipher = crypto.createDecipheriv(\n      this.crypto.cipher,\n      derivedKey.slice(0, 16),\n      Buffer.from(this.crypto.cipherparams.iv, \"hex\")\n    );\n    return (\n      \"0x\" +\n      Buffer.concat([decipher.update(ciphertext), decipher.final()]).toString(\n        \"hex\"\n      )\n    );\n  }\n\n  extendedPrivateKey(password: string): ExtendedPrivateKey {\n    return ExtendedPrivateKey.parse(this.decrypt(password));\n  }\n\n  checkPassword(password: string): boolean {\n    const derivedKey = this.derivedKey(password);\n    const ciphertext = Buffer.from(this.crypto.ciphertext, \"hex\");\n    return Keystore.mac(derivedKey, ciphertext) === this.crypto.mac;\n  }\n\n  derivedKey(password: string): Buffer {\n    const { kdfparams } = this.crypto;\n    return Buffer.from(\n      syncScrypt(\n        Buffer.from(password),\n        Buffer.from(kdfparams.salt, \"hex\"),\n        kdfparams.n,\n        kdfparams.r,\n        kdfparams.p,\n        kdfparams.dklen\n      )\n    );\n  }\n\n  static mac(derivedKey: Buffer, ciphertext: Buffer): HexStringWithoutPrefix {\n    const keccakSize = 256;\n\n    return (\n      new Keccak(keccakSize)\n        // https://github.com/ethereumjs/ethereumjs-wallet/blob/d57582443fbac2b63956e6d5c4193aa8ce925b3d/src/index.ts#L615-L617\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n        .update(Buffer.concat([derivedKey.subarray(16, 32), ciphertext]))\n        .digest(\"hex\")\n    );\n  }\n\n  static scryptOptions(kdfparams: KdfParams): crypto.ScryptOptions {\n    return {\n      N: kdfparams.n,\n      r: kdfparams.r,\n      p: kdfparams.p,\n      // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n      maxmem: 128 * (kdfparams.n + kdfparams.p + 2) * kdfparams.r,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}