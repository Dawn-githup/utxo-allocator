{"version":3,"file":"keychain.js","names":["_crypto","_interopRequireDefault","require","_elliptic","_bn","_key","obj","__esModule","default","ec","EC","EMPTY_BUFFER","Buffer","from","Keychain","privateKey","publicKey","chainCode","index","depth","identifier","fingerprint","parentFingerprint","constructor","isNeutered","privateToPublic","calculateFingerprint","hash160","slice","readUInt32BE","fromSeed","seed","i","crypto","createHmac","update","digest","keychain","fromPublicKey","path","pathComponents","split","length","parseInt","deriveChild","hardened","data","indexBuffer","allocUnsafe","pk","concat","alloc","writeUInt32BE","il","ir","child","publicKeyAdd","privateKeyAdd","derivePath","master","includes","bip32","entries","forEach","c","childIndex","sha256","createHash","factor","result","BN","iadd","cmp","curve","n","isub","toArrayLike","x","toRed","red","y","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","point","g","mul","add","encode","exports"],"sources":["../src/keychain.ts"],"sourcesContent":["import crypto from \"crypto\";\nimport { ec as EC } from \"elliptic\";\nimport BN from \"bn.js\";\nimport { privateToPublic } from \"./key\";\n\nconst ec = new EC(\"secp256k1\");\n\nconst EMPTY_BUFFER = Buffer.from(\"\");\n\n// BIP32 Keychain. Not a full implementation.\nexport default class Keychain {\n  privateKey: Buffer = EMPTY_BUFFER;\n  publicKey: Buffer = EMPTY_BUFFER;\n  chainCode: Buffer = EMPTY_BUFFER;\n  index: number = 0;\n  depth: number = 0;\n  identifier: Buffer = EMPTY_BUFFER;\n  fingerprint: number = 0;\n  parentFingerprint: number = 0;\n\n  constructor(privateKey: Buffer, chainCode: Buffer) {\n    this.privateKey = privateKey;\n    this.chainCode = chainCode;\n\n    if (!this.isNeutered()) {\n      this.publicKey = privateToPublic(this.privateKey);\n    }\n  }\n\n  calculateFingerprint(): void {\n    this.identifier = this.hash160(this.publicKey);\n    this.fingerprint = this.identifier.slice(0, 4).readUInt32BE(0);\n  }\n\n  public static fromSeed(seed: Buffer): Keychain {\n    const i = crypto\n      .createHmac(\"sha512\", Buffer.from(\"Bitcoin seed\", \"utf8\"))\n      .update(seed)\n      .digest();\n    const keychain = new Keychain(i.slice(0, 32), i.slice(32));\n    keychain.calculateFingerprint();\n    return keychain;\n  }\n\n  // Create a child keychain with extended public key and path.\n  // Children of this keychain should not have any hardened paths.\n  public static fromPublicKey(\n    publicKey: Buffer,\n    chainCode: Buffer,\n    path: String\n  ): Keychain {\n    const keychain = new Keychain(EMPTY_BUFFER, chainCode);\n    keychain.publicKey = publicKey;\n    keychain.calculateFingerprint();\n\n    const pathComponents = path.split(\"/\");\n    keychain.depth = pathComponents.length - 1;\n    keychain.index = parseInt(pathComponents[pathComponents.length - 1], 10);\n\n    return keychain;\n  }\n\n  public deriveChild(index: number, hardened: boolean): Keychain {\n    let data: Buffer;\n\n    const indexBuffer: Buffer = Buffer.allocUnsafe(4);\n\n    if (hardened) {\n      const pk = Buffer.concat([Buffer.alloc(1, 0), this.privateKey]);\n      indexBuffer.writeUInt32BE(index + 0x80000000, 0);\n      data = Buffer.concat([pk, indexBuffer]);\n    } else {\n      indexBuffer.writeUInt32BE(index, 0);\n      data = Buffer.concat([this.publicKey, indexBuffer]);\n    }\n\n    const i = crypto.createHmac(\"sha512\", this.chainCode).update(data).digest();\n    const il = i.slice(0, 32);\n    const ir = i.slice(32);\n\n    let child: Keychain;\n    if (this.isNeutered()) {\n      child = new Keychain(EMPTY_BUFFER, ir);\n      child.publicKey = Keychain.publicKeyAdd(this.publicKey, il);\n      child.calculateFingerprint();\n    } else {\n      const privateKey = Keychain.privateKeyAdd(this.privateKey, il);\n      child = new Keychain(privateKey, ir);\n      child.calculateFingerprint();\n    }\n\n    child.index = index;\n    child.depth = this.depth + 1;\n    child.parentFingerprint = this.fingerprint;\n\n    return child;\n  }\n\n  public derivePath(path: string): Keychain {\n    const master = [\"m\", `/`, \"\"];\n    if (master.includes(path)) {\n      return this;\n    }\n\n    let bip32: Keychain = this;\n\n    let entries = path.split(\"/\");\n    if (entries[0] === \"m\") {\n      entries = entries.slice(1);\n    }\n    entries.forEach((c) => {\n      const childIndex = parseInt(c, 10);\n      const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n      bip32 = bip32.deriveChild(childIndex, hardened);\n    });\n\n    return bip32;\n  }\n\n  isNeutered(): Boolean {\n    return this.privateKey === EMPTY_BUFFER;\n  }\n\n  hash160(data: Buffer): Buffer {\n    const sha256 = crypto.createHash(\"sha256\").update(data).digest();\n    return crypto.createHash(\"ripemd160\").update(sha256).digest();\n  }\n\n  private static privateKeyAdd(privateKey: Buffer, factor: Buffer): Buffer {\n    const result = new BN(factor);\n    result.iadd(new BN(privateKey));\n    if (result.cmp(ec.curve.n) >= 0) {\n      result.isub(ec.curve.n);\n    }\n\n    return result.toArrayLike(Buffer, \"be\", 32);\n  }\n\n  private static publicKeyAdd(publicKey: Buffer, factor: Buffer): Buffer {\n    const x = new BN(publicKey.slice(1)).toRed(ec.curve.red);\n    let y = x.redSqr().redIMul(x).redIAdd(ec.curve.b).redSqrt();\n    if ((publicKey[0] === 0x03) !== y.isOdd()) {\n      y = y.redNeg();\n    }\n    const point = ec.curve.g.mul(new BN(factor)).add({ x, y });\n    return Buffer.from(point.encode(true, true));\n  }\n}\n"],"mappings":"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","ignoreList":[]}