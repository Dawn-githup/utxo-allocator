{"version":3,"file":"indexer.js","names":["_paramsFormatter","require","resultFmts","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","schemas","getIndexerTip","method","paramsFormatters","resultFormatters","toTip","getCells","paramsFmts","toGetCellsSearchKey","toOrder","toNumber","toOptional","toHash","toGetCellsResult","getTransactions","toGetTransactionsSearchKey","toGetTransactionsResult","getCellsCapacity","toSearchKey","toCellsCapacity","getBlockFilter","toNullable","toBlockFilter","getTransactionAndWitnessProof","toArray","toTransactionAndWitnessProof","verifyTransactionAndWitnessProof","getForkBlock","toForkBlockResult","getBlockMedianTime","estimateCycles","toRawTransaction","toEstimateCycles","getFeeRateStatistics","toFeeRateStatistics","getFeeRateStatics","_default","exports"],"sources":["../../src/Base/indexer.ts"],"sourcesContent":["import { formatter as paramsFmts } from \"../paramsFormatter\";\nimport * as resultFmts from \"../resultFormatter\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\ntype MethodSchema = {\n  method: string;\n  paramsFormatters: ((arg: any) => any)[];\n  resultFormatters: (arg: any) => any;\n};\n\nconst schemas: Record<string, MethodSchema> = {\n  getIndexerTip: {\n    method: \"get_indexer_tip\",\n    paramsFormatters: [],\n    resultFormatters: resultFmts.toTip,\n  },\n\n  getCells: {\n    method: \"get_cells\",\n    paramsFormatters: [\n      paramsFmts.toGetCellsSearchKey,\n      paramsFmts.toOrder,\n      paramsFmts.toNumber,\n      paramsFmts.toOptional(paramsFmts.toHash),\n    ],\n    resultFormatters: resultFmts.toGetCellsResult,\n  },\n\n  getTransactions: {\n    method: \"get_transactions\",\n    paramsFormatters: [\n      paramsFmts.toGetTransactionsSearchKey,\n      paramsFmts.toOrder,\n      paramsFmts.toNumber,\n      paramsFmts.toOptional(paramsFmts.toHash),\n    ],\n    resultFormatters: resultFmts.toGetTransactionsResult,\n  },\n\n  getCellsCapacity: {\n    method: \"get_cells_capacity\",\n    paramsFormatters: [paramsFmts.toSearchKey],\n    resultFormatters: resultFmts.toCellsCapacity,\n  },\n\n  getBlockFilter: {\n    method: \"get_block_filter\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toNullable(resultFmts.toBlockFilter),\n  },\n  getTransactionAndWitnessProof: {\n    method: \"get_transaction_and_witness_proof\",\n    paramsFormatters: [\n      paramsFmts.toArray(paramsFmts.toHash),\n      paramsFmts.toOptional(paramsFmts.toHash),\n    ],\n    resultFormatters: resultFmts.toTransactionAndWitnessProof,\n  },\n  verifyTransactionAndWitnessProof: {\n    method: \"verify_transaction_and_witness_proof\",\n    paramsFormatters: [paramsFmts.toTransactionAndWitnessProof],\n    resultFormatters: resultFmts.toArray(resultFmts.toHash),\n  },\n\n  getForkBlock: {\n    method: \"get_fork_block\",\n    paramsFormatters: [\n      paramsFmts.toHash,\n      paramsFmts.toOptional(paramsFmts.toNumber),\n    ],\n    resultFormatters: resultFmts.toNullable(resultFmts.toForkBlockResult),\n  },\n\n  getBlockMedianTime: {\n    method: \"get_block_median_time\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toNullable(resultFmts.toNumber),\n  },\n\n  estimateCycles: {\n    method: \"estimate_cycles\",\n    paramsFormatters: [paramsFmts.toRawTransaction],\n    resultFormatters: resultFmts.toEstimateCycles,\n  },\n\n  getFeeRateStatistics: {\n    method: \"get_fee_rate_statistics\",\n    paramsFormatters: [paramsFmts.toOptional(paramsFmts.toNumber)],\n    resultFormatters: resultFmts.toNullable(resultFmts.toFeeRateStatistics),\n  },\n\n  getFeeRateStatics: {\n    method: \"get_fee_rate_statics\",\n    paramsFormatters: [paramsFmts.toOptional(paramsFmts.toNumber)],\n    resultFormatters: resultFmts.toNullable(resultFmts.toFeeRateStatistics),\n  },\n};\n\nexport default schemas;\n"],"mappings":"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","ignoreList":[]}