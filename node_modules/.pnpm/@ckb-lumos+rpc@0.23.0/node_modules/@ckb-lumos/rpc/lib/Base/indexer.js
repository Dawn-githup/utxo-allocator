"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _paramsFormatter = require("../paramsFormatter");
var resultFmts = _interopRequireWildcard(require("../resultFormatter"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/* eslint-disable @typescript-eslint/no-explicit-any */

const schemas = {
  getIndexerTip: {
    method: "get_indexer_tip",
    paramsFormatters: [],
    resultFormatters: resultFmts.toTip
  },
  getCells: {
    method: "get_cells",
    paramsFormatters: [_paramsFormatter.formatter.toGetCellsSearchKey, _paramsFormatter.formatter.toOrder, _paramsFormatter.formatter.toNumber, _paramsFormatter.formatter.toOptional(_paramsFormatter.formatter.toHash)],
    resultFormatters: resultFmts.toGetCellsResult
  },
  getTransactions: {
    method: "get_transactions",
    paramsFormatters: [_paramsFormatter.formatter.toGetTransactionsSearchKey, _paramsFormatter.formatter.toOrder, _paramsFormatter.formatter.toNumber, _paramsFormatter.formatter.toOptional(_paramsFormatter.formatter.toHash)],
    resultFormatters: resultFmts.toGetTransactionsResult
  },
  getCellsCapacity: {
    method: "get_cells_capacity",
    paramsFormatters: [_paramsFormatter.formatter.toSearchKey],
    resultFormatters: resultFmts.toCellsCapacity
  },
  getBlockFilter: {
    method: "get_block_filter",
    paramsFormatters: [_paramsFormatter.formatter.toHash],
    resultFormatters: resultFmts.toNullable(resultFmts.toBlockFilter)
  },
  getTransactionAndWitnessProof: {
    method: "get_transaction_and_witness_proof",
    paramsFormatters: [_paramsFormatter.formatter.toArray(_paramsFormatter.formatter.toHash), _paramsFormatter.formatter.toOptional(_paramsFormatter.formatter.toHash)],
    resultFormatters: resultFmts.toTransactionAndWitnessProof
  },
  verifyTransactionAndWitnessProof: {
    method: "verify_transaction_and_witness_proof",
    paramsFormatters: [_paramsFormatter.formatter.toTransactionAndWitnessProof],
    resultFormatters: resultFmts.toArray(resultFmts.toHash)
  },
  getForkBlock: {
    method: "get_fork_block",
    paramsFormatters: [_paramsFormatter.formatter.toHash, _paramsFormatter.formatter.toOptional(_paramsFormatter.formatter.toNumber)],
    resultFormatters: resultFmts.toNullable(resultFmts.toForkBlockResult)
  },
  getBlockMedianTime: {
    method: "get_block_median_time",
    paramsFormatters: [_paramsFormatter.formatter.toHash],
    resultFormatters: resultFmts.toNullable(resultFmts.toNumber)
  },
  estimateCycles: {
    method: "estimate_cycles",
    paramsFormatters: [_paramsFormatter.formatter.toRawTransaction],
    resultFormatters: resultFmts.toEstimateCycles
  },
  getFeeRateStatistics: {
    method: "get_fee_rate_statistics",
    paramsFormatters: [_paramsFormatter.formatter.toOptional(_paramsFormatter.formatter.toNumber)],
    resultFormatters: resultFmts.toNullable(resultFmts.toFeeRateStatistics)
  },
  getFeeRateStatics: {
    method: "get_fee_rate_statics",
    paramsFormatters: [_paramsFormatter.formatter.toOptional(_paramsFormatter.formatter.toNumber)],
    resultFormatters: resultFmts.toNullable(resultFmts.toFeeRateStatistics)
  }
};
var _default = exports.default = schemas;
//# sourceMappingURL=indexer.js.map