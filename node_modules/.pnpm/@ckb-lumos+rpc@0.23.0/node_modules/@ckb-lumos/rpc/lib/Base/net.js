"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _paramsFormatter = require("../paramsFormatter");
var resultFmts = _interopRequireWildcard(require("../resultFormatter"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var _default = exports.default = {
  localNodeInfo: {
    method: "local_node_info",
    paramsFormatters: [],
    resultFormatters: resultFmts.toLocalNodeInfo
  },
  getPeers: {
    method: "get_peers",
    paramsFormatters: [],
    resultFormatters: resultFmts.toPeers
  },
  getBannedAddresses: {
    method: "get_banned_addresses",
    paramsFormatters: [],
    resultFormatters: resultFmts.toBannedAddresses
  },
  clearBannedAddresses: {
    method: "clear_banned_addresses",
    paramsFormatters: []
  },
  setBan: {
    method: "set_ban",
    paramsFormatters: []
  },
  syncState: {
    method: "sync_state",
    paramsFormatters: [],
    resultFormatters: resultFmts.toSyncState
  },
  setNetworkActive: {
    method: "set_network_active",
    paramsFormatters: [_paramsFormatter.formatter.toBoolean]
  },
  addNode: {
    method: "add_node",
    paramsFormatters: []
  },
  removeNode: {
    method: "remove_node",
    paramsFormatters: []
  },
  pingPeers: {
    method: "ping_peers",
    paramsFormatters: []
  }
};
//# sourceMappingURL=net.js.map