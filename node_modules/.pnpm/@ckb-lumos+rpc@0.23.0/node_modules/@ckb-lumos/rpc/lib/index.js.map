{"version":3,"file":"index.js","names":["_Base","require","_method","_paramsFormatter","resultFormatter","_interopRequireWildcard","_exceptions","_crossFetch","_interopRequireDefault","_abortController","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ParamsFormatter","exports","paramsFormatter","ResultFormatter","DEFAULT_RPC_TIMEOUT","CKBRPC","Base","config","node","url","constructor","setNode","timeout","fetch","fetch_","defineProperties","addMethod","value","enumerable","writable","configurable","keys","rpcProperties","forEach","name","assign","options","method","Method","createBatchRequest","params","ctx","proxied","Proxy","p","methods","_p$","indexOf","MethodInBatchNotFoundException","Reflect","add","args","push","remove","splice","exec","payload","map","f","getPayload","err","PayloadInBatchException","message","controller","AbortController","signal","setTimeout","abort","batchRes","headers","body","JSON","stringify","then","res","json","clearTimeout","_ctx$rpcProperties$pr","_ctx$rpcProperties$pr2","_ctx$rpcProperties$pr3","id","IdNotMatchedInBatchException","resultFormatters","result","RPC"],"sources":["../src/index.ts"],"sourcesContent":["import { Base } from \"./Base\";\nimport { Method } from \"./method\";\nimport { CKBComponents } from \"./types/api\";\nimport { formatter as paramsFormatter } from \"./paramsFormatter\";\nimport * as resultFormatter from \"./resultFormatter\";\nimport {\n  IdNotMatchedInBatchException,\n  MethodInBatchNotFoundException,\n  PayloadInBatchException,\n} from \"./exceptions\";\nimport { RPCConfig } from \"./types/common\";\nimport fetch_ from \"cross-fetch\";\nimport AbortController from \"abort-controller\";\n\nexport const ParamsFormatter = paramsFormatter;\nexport const ResultFormatter = resultFormatter;\n\nexport const DEFAULT_RPC_TIMEOUT = 30000;\n\nexport class CKBRPC extends Base {\n  #config: RPCConfig;\n  #node: CKBComponents.Node = {\n    url: \"\",\n  };\n\n  get node(): CKBComponents.Node {\n    return this.#node;\n  }\n\n  #paramsFormatter = paramsFormatter;\n\n  get paramsFormatter(): typeof paramsFormatter {\n    return this.#paramsFormatter;\n  }\n\n  #resultFormatter = resultFormatter;\n\n  get resultFormatter(): typeof resultFormatter {\n    return this.#resultFormatter;\n  }\n\n  constructor(url: string, config: Partial<RPCConfig> = {}) {\n    super();\n    this.setNode({ url });\n    const { timeout = DEFAULT_RPC_TIMEOUT, fetch = fetch_ } = config;\n    this.#config = { timeout, fetch };\n\n    Object.defineProperties(this, {\n      addMethod: {\n        value: this.addMethod,\n        enumerable: false,\n        writable: false,\n        configurable: false,\n      },\n      setNode: {\n        value: this.setNode,\n        enumerable: false,\n        writable: false,\n        configurable: false,\n      },\n      // createBatchRequest: { value: this.createBatchRequest, enumerable: false, writable: false, configurable: false },\n    });\n\n    Object.keys(this.rpcProperties).forEach((name) => {\n      this.addMethod({ name, ...this.rpcProperties[name] }, this.#config);\n    });\n  }\n\n  public setNode(node: CKBComponents.Node): CKBComponents.Node {\n    Object.assign(this.node, node);\n    return this.node;\n  }\n\n  public addMethod = (\n    options: CKBComponents.Method,\n    config?: RPCConfig\n  ): void => {\n    const method = new Method(this.node, options, config);\n\n    Object.defineProperty(this, options.name, {\n      value: method.call,\n      enumerable: true,\n    });\n  };\n  /* eslint-disable */\n  public createBatchRequest = <\n    N extends keyof Base,\n    P extends (string | number | object)[],\n    R = any[]\n  >(\n    params: [method: N, ...rest: P][] = []\n  ) => {\n    const ctx = this;\n\n    const proxied: [method: N, ...rest: P][] = new Proxy([], {\n      set(...p) {\n        const methods = Object.keys(ctx);\n        if (p[1] !== \"length\") {\n          const name = p?.[2]?.[0];\n          if (methods.indexOf(name) === -1) {\n            throw new MethodInBatchNotFoundException(name);\n          }\n        }\n        return Reflect.set(...p);\n      },\n    });\n\n    Object.defineProperties(proxied, {\n      add: {\n        value(...args: P) {\n          this.push(args);\n          return this;\n        },\n      },\n      remove: {\n        value(i: number) {\n          this.splice(i, 1);\n          return this;\n        },\n      },\n      exec: {\n        async value() {\n          const payload = proxied.map(([f, ...p], i) => {\n            try {\n              const method = new Method(ctx.node, {\n                ...ctx.rpcProperties[f],\n                name: f,\n              });\n              return method.getPayload(...p);\n            } catch (err) {\n              throw new PayloadInBatchException(i, (err as Error).message);\n            }\n          });\n\n          const controller = new AbortController();\n          const signal = controller.signal as AbortSignal;\n\n          const timeout = setTimeout(\n            () => controller.abort(),\n            ctx.#config.timeout\n          );\n\n          const batchRes = await ctx.#config\n            .fetch(ctx.#node.url, {\n              method: \"POST\",\n              headers: { \"content-type\": \"application/json\" },\n              body: JSON.stringify(payload),\n              signal,\n            })\n            .then((res) => res.json());\n\n          clearTimeout(timeout);\n\n          return batchRes.map((res: any, i: number) => {\n            if (res.id !== payload[i].id) {\n              return new IdNotMatchedInBatchException(i, payload[i].id, res.id);\n            }\n            return (\n              ctx.rpcProperties[proxied[i][0]].resultFormatters?.(res.result) ??\n              res.result\n            );\n          });\n        },\n      },\n    });\n\n    params.forEach((p) => proxied.push(p));\n\n    return proxied as typeof proxied & {\n      add: (n: N, ...p: P) => typeof proxied;\n      remove: (index: number) => typeof proxied;\n      exec: () => Promise<R>;\n    };\n  };\n}\n\nexport { CKBRPC as RPC };\n"],"mappings":"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","ignoreList":[]}