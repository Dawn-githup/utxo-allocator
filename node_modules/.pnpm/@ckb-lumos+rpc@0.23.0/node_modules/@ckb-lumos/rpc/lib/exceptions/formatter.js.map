{"version":3,"file":"formatter.js","names":["_ErrorCode","_interopRequireDefault","require","obj","__esModule","default","PageSizeTooLargeException","RangeError","code","ErrorCode","ParameterInvalid","constructor","pageSize","maxSize","exports","PageSizeTooSmallException","minSize","OutputsValidatorTypeException","TypeError","BigintOrHexStringTypeException","value","StringHashTypeException","hash","HexStringWithout0xException","Error","hex","_default"],"sources":["../../src/exceptions/formatter.ts"],"sourcesContent":["// eslint-disable-next-line import/no-named-as-default\nimport ErrorCode from \"./ErrorCode\";\n\nexport class PageSizeTooLargeException extends RangeError {\n  code = ErrorCode.ParameterInvalid;\n\n  constructor(pageSize: bigint | string, maxSize: number) {\n    super(\n      `Expect page size to be at most ${maxSize}, but ${pageSize} received`\n    );\n  }\n}\n\nexport class PageSizeTooSmallException extends RangeError {\n  code = ErrorCode.ParameterInvalid;\n\n  constructor(pageSize: bigint | string, minSize: number) {\n    super(\n      `Expect page size to be at least ${minSize}, but ${pageSize} received`\n    );\n  }\n}\n\nexport class OutputsValidatorTypeException extends TypeError {\n  code = ErrorCode.ParameterInvalid;\n\n  constructor() {\n    super(`Expect outputs validator to be 'default' or 'passthrough'`);\n  }\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types */\nexport class BigintOrHexStringTypeException extends TypeError {\n  code = ErrorCode.ParameterInvalid;\n\n  constructor(value: any) {\n    super(`Expect number to be bigint or hex string, but ${value} received`);\n  }\n}\n\nexport class StringHashTypeException extends TypeError {\n  code = ErrorCode.ParameterInvalid;\n\n  constructor(hash: any) {\n    super(`Expect hash to be string, but ${hash} received`);\n  }\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types */\nexport class HexStringWithout0xException extends Error {\n  code = ErrorCode.ParameterInvalid;\n\n  constructor(hex: string) {\n    super(`Hex string ${hex} should start with 0x`);\n  }\n}\n\nexport default {\n  PageSizeTooLargeException,\n  PageSizeTooSmallException,\n  OutputsValidatorTypeException,\n  BigintOrHexStringTypeException,\n  StringHashTypeException,\n  HexStringWithout0xException,\n};\n"],"mappings":";;;;;;AACA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAoC,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AADpC;;AAGO,MAAMG,yBAAyB,SAASC,UAAU,CAAC;EACxDC,IAAI,GAAGC,kBAAS,CAACC,gBAAgB;EAEjCC,WAAWA,CAACC,QAAyB,EAAEC,OAAe,EAAE;IACtD,KAAK,CACF,kCAAiCA,OAAQ,SAAQD,QAAS,WAC7D,CAAC;EACH;AACF;AAACE,OAAA,CAAAR,yBAAA,GAAAA,yBAAA;AAEM,MAAMS,yBAAyB,SAASR,UAAU,CAAC;EACxDC,IAAI,GAAGC,kBAAS,CAACC,gBAAgB;EAEjCC,WAAWA,CAACC,QAAyB,EAAEI,OAAe,EAAE;IACtD,KAAK,CACF,mCAAkCA,OAAQ,SAAQJ,QAAS,WAC9D,CAAC;EACH;AACF;AAACE,OAAA,CAAAC,yBAAA,GAAAA,yBAAA;AAEM,MAAME,6BAA6B,SAASC,SAAS,CAAC;EAC3DV,IAAI,GAAGC,kBAAS,CAACC,gBAAgB;EAEjCC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAE,2DAA0D,CAAC;EACpE;AACF;;AAEA;AAAAG,OAAA,CAAAG,6BAAA,GAAAA,6BAAA;AACO,MAAME,8BAA8B,SAASD,SAAS,CAAC;EAC5DV,IAAI,GAAGC,kBAAS,CAACC,gBAAgB;EAEjCC,WAAWA,CAACS,KAAU,EAAE;IACtB,KAAK,CAAE,iDAAgDA,KAAM,WAAU,CAAC;EAC1E;AACF;AAACN,OAAA,CAAAK,8BAAA,GAAAA,8BAAA;AAEM,MAAME,uBAAuB,SAASH,SAAS,CAAC;EACrDV,IAAI,GAAGC,kBAAS,CAACC,gBAAgB;EAEjCC,WAAWA,CAACW,IAAS,EAAE;IACrB,KAAK,CAAE,iCAAgCA,IAAK,WAAU,CAAC;EACzD;AACF;AACA;AAAAR,OAAA,CAAAO,uBAAA,GAAAA,uBAAA;AACO,MAAME,2BAA2B,SAASC,KAAK,CAAC;EACrDhB,IAAI,GAAGC,kBAAS,CAACC,gBAAgB;EAEjCC,WAAWA,CAACc,GAAW,EAAE;IACvB,KAAK,CAAE,cAAaA,GAAI,uBAAsB,CAAC;EACjD;AACF;AAACX,OAAA,CAAAS,2BAAA,GAAAA,2BAAA;AAAA,IAAAG,QAAA,GAAAZ,OAAA,CAAAT,OAAA,GAEc;EACbC,yBAAyB;EACzBS,yBAAyB;EACzBE,6BAA6B;EAC7BE,8BAA8B;EAC9BE,uBAAuB;EACvBE;AACF,CAAC","ignoreList":[]}