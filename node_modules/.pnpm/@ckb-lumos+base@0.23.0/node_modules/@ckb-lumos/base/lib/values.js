"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TransactionValue = exports.ScriptValue = exports.RawTransactionValue = exports.OutPointValue = void 0;
var _jsXxhash = require("js-xxhash");
var _utils = require("./utils");
var _codec = require("@ckb-lumos/codec");
var blockchain = _interopRequireWildcard(require("./blockchain"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// This module provides a ValueObject implementation for CKB related data
// structures to allow seamless immutable.js integration.

const {
  hexify
} = _codec.bytes;
class Value {
  constructor(buffer) {
    this.buffer = buffer;
  }
  equals(other) {
    return hexify(this.buffer) === hexify(other.buffer);
  }
  hashCode() {
    return (0, _jsXxhash.xxHash32)(Buffer.from(this.buffer), 0);
  }
  hash() {
    return (0, _utils.ckbHash)(this.buffer);
  }
}
class ScriptValue extends Value {
  /**
   * @param script
   * @param _options @deprecated this parameter is unused and takes no effect, please remove it.
   */
  constructor(script, _options = {}) {
    super(blockchain.Script.pack(script));
  }
}
exports.ScriptValue = ScriptValue;
class OutPointValue extends Value {
  /**
   * @param outPoint
   * @param _options @deprecated this parameter is unused and takes no effect, please remove it.
   */
  constructor(outPoint, _options = {}) {
    super(blockchain.OutPoint.pack(outPoint));
  }
}
exports.OutPointValue = OutPointValue;
class RawTransactionValue extends Value {
  /**
   * @param rawTransaction
   * @param _options @deprecated this parameter is unused and takes no effect, please remove it.
   */
  constructor(rawTransaction, _options = {}) {
    super(blockchain.RawTransaction.pack(rawTransaction));
  }
}
exports.RawTransactionValue = RawTransactionValue;
class TransactionValue extends Value {
  /**
   * @param transaction
   * @param _options @deprecated this parameter is unused and takes no effect, please remove it.
   */
  constructor(transaction, _options = {}) {
    super(blockchain.Transaction.pack(transaction));
  }
}
exports.TransactionValue = TransactionValue;
//# sourceMappingURL=values.js.map