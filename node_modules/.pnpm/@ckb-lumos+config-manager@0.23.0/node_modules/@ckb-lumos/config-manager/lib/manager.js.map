{"version":3,"file":"manager.js","names":["_deepFreezeStrict","_interopRequireDefault","require","_predefined","obj","__esModule","default","assertHexString","debugPath","string","test","Error","assertHash","hash","hashHexLength","length","assertInteger","i","assertHashType","hashType","assert","condition","validateConfig","config","SCRIPTS","scriptName","Object","keys","scriptConfig","CODE_HASH","HASH_TYPE","TX_HASH","INDEX","depType","DEP_TYPE","shortId","SHORT_ID","undefined","predefined","LINA","getConfig","initializeConfig","inputConfig","deepFreeze"],"sources":["../src/manager.ts"],"sourcesContent":["import deepFreeze from \"deep-freeze-strict\";\nimport { Config } from \"./types\";\nimport { predefined } from \"./predefined\";\n\nfunction assertHexString(debugPath: string, string: string) {\n  if (!/^0x([0-9a-fA-F][0-9a-fA-F])*$/.test(string)) {\n    throw new Error(`${debugPath} must be a hex string!`);\n  }\n}\n\nfunction assertHash(debugPath: string, hash: string) {\n  assertHexString(debugPath, hash);\n  // 2 for 0x\n  // 64 for 32 bytes in hex format\n  const hashHexLength = 66;\n  if (hash.length !== hashHexLength) {\n    throw new Error(`${debugPath} must be a hex string of 66 characters long!`);\n  }\n}\n\nfunction assertInteger(debugPath: string, i: string) {\n  if (i === \"0x0\") {\n    return;\n  }\n  if (!/^0x[1-9a-fA-F][0-9a-fA-F]*$/.test(i)) {\n    throw new Error(`${debugPath} must be a hex integer!`);\n  }\n}\n\nexport function assertHashType(debugPath: string, hashType: string): void {\n  if (\n    hashType !== \"type\" &&\n    hashType !== \"data\" &&\n    hashType !== \"data1\" &&\n    hashType !== \"data2\"\n  ) {\n    throw new Error(`${debugPath} must one of type, data, data1, data2!`);\n  }\n}\n\nfunction assert(condition: unknown, debugPath = \"variable\"): asserts condition {\n  if (!condition) throw new Error(`${debugPath} is not valid`);\n}\n\nexport function validateConfig(config: Config): void {\n  assert(\n    typeof config.SCRIPTS === \"object\" && config.SCRIPTS != null,\n    \"config.SCRIPT\"\n  );\n\n  for (const scriptName of Object.keys(config.SCRIPTS)) {\n    const scriptConfig = config.SCRIPTS[scriptName];\n\n    assert(scriptConfig?.CODE_HASH);\n\n    assertHash(`SCRIPTS.${scriptName}.CODE_HASH`, scriptConfig.CODE_HASH);\n    assertHashType(`SCRIPTS.${scriptName}.HASH_TYPE`, scriptConfig.HASH_TYPE);\n    assertHash(`SCRIPTS.${scriptName}.TX_HASH`, scriptConfig.TX_HASH);\n    assertInteger(`SCRIPTS.${scriptName}.INDEX`, scriptConfig.INDEX);\n    const depType = scriptConfig.DEP_TYPE;\n    if (depType !== \"depGroup\" && depType !== \"code\") {\n      throw new Error(\n        `SCRIPTS.${scriptName}.DEP_TYPE must either be depGroup or code!`\n      );\n    }\n    const shortId = scriptConfig.SHORT_ID;\n    // Short ID is optional\n    if (shortId != undefined) {\n      if (typeof shortId !== \"number\") {\n        throw new Error(\"SHORT_ID must be a number!\");\n      }\n    }\n  }\n}\n\nlet config: Config = predefined.LINA;\n\nexport function getConfig(): Config {\n  return config;\n}\n\nexport function initializeConfig(inputConfig: Config): void {\n  validateConfig(inputConfig);\n  config = deepFreeze(inputConfig);\n}\n"],"mappings":"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","ignoreList":[]}