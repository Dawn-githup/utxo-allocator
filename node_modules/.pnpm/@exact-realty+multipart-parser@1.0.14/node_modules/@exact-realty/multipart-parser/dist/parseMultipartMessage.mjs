var w=/^[0-9a-zA-Z'()+_,\-./:=? ]{0,69}[0-9a-zA-Z'()+_,\-./:=?]$/,M=/;\s*boundary=(?:"([0-9a-zA-Z'()+_,\-./:=? ]{0,69}[0-9a-zA-Z'()+_,\-./:=?])"|([0-9a-zA-Z'+_\-.]{0,69}[0-9a-zA-Z'+_\-.]))/;var U=e=>new ReadableStream({pull(n){if(ArrayBuffer.isView(e))n.enqueue(e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength));else if(e instanceof ArrayBuffer)n.enqueue(e);else throw new TypeError("Expected ArrayBuffer or an ArrayBuffer view.");n.close()}}),I=U;var N=(e,t)=>{e:for(let n=0;n<=e.length-t.length;n++){for(let a=0;a<t.length;a++)if(e[n+a]!==t[a])continue e;return n}return-1},l=N;var _=(e,...t)=>{let n=t.reduce((d,r)=>d+r.byteLength,e.length),a=new(Object(t[0])).constructor(n);a.set(e);let y=e.length;return t.forEach(d=>{a.set(d,y),y+=d.byteLength}),a},L=_;var P=new TextDecoder,k=new TextEncoder,h=k.encode(`\r
`),v=[9,32],G=e=>{let t=0,n=[];for(;(t=l(e,h))!==-1&&t!==0;){let y=e.indexOf(58);if(y===-1)throw new Error("Invalid header");let d=P.decode(e.subarray(0,y));for(;v.includes(e[t+2]);){let o=l(e.subarray(t+2),h);if(o<1)break;t+=2+o}let r=P.decode(e.subarray(y+1,t)).replace(/\r\n/g,"");n.push([d,r]),e=e.subarray(t+h.length)}let a=new Headers(n);return a.has("content-transfer-encoding")||a.set("content-transfer-encoding","7bit"),a.has("content-type")||a.set("content-type","text/plain; charset=us-ascii"),{headers:a,body:t===-1?null:e.subarray(t+h.length)}},B=G;async function*S(e,t){var b;if(!w.test(t))throw new Error("Invalid boundary delimiter");let n=new TextEncoder,a=[9,32],y=new Uint8Array([13,10]),d=n.encode(`\r
--${t}`),r=new Uint8Array,o=0,E=!1,m=e.getReader();try{for(;o!==3;){let{done:A,value:p}=await m.read();if(A){if(r.length===0||E)throw new Error("Invalid message");E=!0}else r=L(r,ArrayBuffer.isView(p)?new Uint8Array(p.buffer,p.byteOffset,p.byteLength):new Uint8Array(p));for(;r.length>0;){let i=NaN;if(o===0&&(i=l(r,d.slice(2))-2,i===-3)||(i!==-2&&(i=l(r,d)),i===-1))break;let s=i+d.length,c=A?0:l(r.subarray(s,s+32),y);if(c===-1&&r.length-s<32)break;if(c===-1||!Array.from(r.subarray(s+Math.min(2,c),s+c)).every(g=>a.includes(g)))throw new Error(`Invalid boundary at index ${i}`);if(A||c>=2){if([1,2].includes(o)&&r[s+0]===r[s+1]&&r[s+0]===45)o=3;else if(!a.includes(r[s+0])||!a.includes(r[s+1]))throw new Error(`Invalid boundary at index ${i} (${t}): ${(b=r[s+1])==null?void 0:b.toString(16)}`)}switch(o){case 0:o=1;break;case 1:o=2;case 2:case 3:if(r.subarray(i,s).length>0){let g=r.subarray(0,i),u=B(g),f=u.headers.get("content-type"),x;if(u.body&&(f!=null&&f.startsWith("multipart/"))){let T=f.match(M);if(T){let R=T[1]||T[2];x=S(I(u.body),R)}else x=null}yield{headers:u.headers,body:u.body,...x!==void 0&&{parts:x}}}break}if(o===3){r=r.subarray(r.length);break}r=r.subarray(c+s+2)}}}finally{m.releaseLock()}}var O=S;export{O as default,O as parseMultipartMessage};
