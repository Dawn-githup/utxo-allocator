{"version":3,"file":"transformers.js","names":["validators","_interopRequireWildcard","require","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","invokeSerializeJson","debugPath","value","serializeJson","Function","transformObject","object","keys","Error","result","key","f","entries","camelKey","replace","group","toUpperCase","TransformScript","script","validation","codeHash","hashType","args","ValidateScript","TransformOutPoint","outPoint","txHash","index","ValidateOutPoint","toInvoke","transform","TransformCellInput","cellInput","since","previousOutput","ValidateCellInput","TransformCellOutput","cellOutput","capacity","lock","type","ValidateCellOutput","TransformCellDep","cellDep","depType","ValidateCellDep","toInvokeArray","invokeFunction","array","map","item","TransformRawTransaction","rawTransaction","version","cellDeps","headerDeps","inputs","outputs","outputsData","ValidateRawTransaction","TransformTransaction","transaction","witnesses","ValidateTransaction","TransformRawHeader","rawHeader","compactTarget","timestamp","number","epoch","parentHash","transactionsRoot","proposalsHash","extraHash","dao","ValidateRawHeader","TransformHeader","header","nonce","ValidateHeader","TransformUncleBlock","uncleBlock","proposals","ValidateUncleBlock","TransformBlock","block","uncles","transactions","ValidateBlock","TransformCellbaseWitness","cellbaseWitness","message","ValidateCellbaseWitness","TransformWitnessArgs","witnessArgs","inputType","outputType","ValidateWitnessArgs"],"sources":["../src/transformers.js"],"sourcesContent":["// This package provides transformer functions that transform JavaScript objects\n// into JSON ready objects that can be passed to RPC. It following the following\n// rules:\n//\n// 1. If the specified object has a serializeJson method, it would invoke this\n// method and use the result to replace current object.\n// 2. It then restricts the keys of the object to keys required by the specified\n// entity(i.e., a Script would only have codeHash, hashType, args keys),for each\n// sub-field, it then recursively perform the steps here from step 1.\n// 3. It then optionally run validator functions to ensure the resulting object\n// follows specified rules.\n//\n// Note rule 1 here provides the flexibility in defining your own structures: you\n// could define a class containing custom data structures, then provide a\n// serializeJson that transforms the custom one into the rigid data structure\n// required by CKB. You can also leverage the Reader class we provide as much as\n// possible. Since Reader class does provide serializeJson methods, transformers\n// here will transform them to valid hex strings required by CKB.\nimport * as validators from \"./validators\";\n\nfunction invokeSerializeJson(debugPath, value) {\n  if (value instanceof Object && value.serializeJson instanceof Function) {\n    return value.serializeJson.call(value);\n  }\n  return value;\n}\n\nfunction transformObject(debugPath, object, keys) {\n  object = invokeSerializeJson(debugPath, object);\n  if (!(object instanceof Object)) {\n    throw new Error(`Transformed ${debugPath} is not an object!`);\n  }\n  const result = {};\n\n  for (const [key, f] of Object.entries(keys)) {\n    let value = object[key];\n    if (!value) {\n      const camelKey = key.replace(/(_[a-z])/g, (group) =>\n        group.toUpperCase().replace(\"_\", \"\")\n      );\n      value = object[camelKey];\n    }\n    if (value) {\n      result[key] = f(`${debugPath}.${key}`, value);\n    }\n  }\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformScript(\n  script,\n  { validation = true, debugPath = \"script\" } = {}\n) {\n  script = transformObject(debugPath, script, {\n    codeHash: invokeSerializeJson,\n    hashType: invokeSerializeJson,\n    args: invokeSerializeJson,\n  });\n\n  if (validation) {\n    validators.ValidateScript(script, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return script;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformOutPoint(\n  outPoint,\n  { validation = true, debugPath = \"outPoint\" } = {}\n) {\n  outPoint = transformObject(debugPath, outPoint, {\n    txHash: invokeSerializeJson,\n    index: invokeSerializeJson,\n  });\n\n  if (validation) {\n    validators.ValidateOutPoint(outPoint, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return outPoint;\n}\n\nfunction toInvoke(transform) {\n  return function (debugPath, value) {\n    return transform(value, {\n      validation: false,\n      debugPath,\n    });\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformCellInput(\n  cellInput,\n  { validation = true, debugPath = \"cell_input\" } = {}\n) {\n  cellInput = transformObject(debugPath, cellInput, {\n    since: invokeSerializeJson,\n    previousOutput: toInvoke(TransformOutPoint),\n  });\n\n  if (validation) {\n    validators.ValidateCellInput(cellInput, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return cellInput;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformCellOutput(\n  cellOutput,\n  { validation = true, debugPath = \"cellOutput\" } = {}\n) {\n  cellOutput = transformObject(debugPath, cellOutput, {\n    capacity: invokeSerializeJson,\n    lock: toInvoke(TransformScript),\n    type: toInvoke(TransformScript),\n  });\n\n  if (validation) {\n    validators.ValidateCellOutput(cellOutput, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return cellOutput;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */ function TransformCellDep(\n  cellDep,\n  { validation = true, debugPath = \"cell_dep\" } = {}\n) {\n  cellDep = transformObject(debugPath, cellDep, {\n    outPoint: toInvoke(TransformOutPoint),\n    depType: invokeSerializeJson,\n  });\n\n  if (validation) {\n    validators.ValidateCellDep(cellDep, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return cellDep;\n}\n\nfunction toInvokeArray(invokeFunction) {\n  return function (debugPath, array) {\n    return array.map((item, i) => {\n      return invokeFunction(`${debugPath}[${i}]`, item);\n    });\n  };\n}\n\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformRawTransaction(\n  rawTransaction,\n  { validation = true, debugPath = \"raw_transaction\" } = {}\n) {\n  rawTransaction = transformObject(debugPath, rawTransaction, {\n    version: invokeSerializeJson,\n    cellDeps: toInvokeArray(toInvoke(TransformCellDep)),\n    headerDeps: toInvokeArray(invokeSerializeJson),\n    inputs: toInvokeArray(toInvoke(TransformCellInput)),\n    outputs: toInvokeArray(toInvoke(TransformCellOutput)),\n    outputsData: toInvokeArray(invokeSerializeJson),\n  });\n\n  if (validation) {\n    validators.ValidateRawTransaction(rawTransaction, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return rawTransaction;\n}\n\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformTransaction(\n  transaction,\n  { validation = true, debugPath = \"transaction\" } = {}\n) {\n  transaction = transformObject(debugPath, transaction, {\n    version: invokeSerializeJson,\n    cellDeps: toInvokeArray(toInvoke(TransformCellDep)),\n    headerDeps: toInvokeArray(invokeSerializeJson),\n    inputs: toInvokeArray(toInvoke(TransformCellInput)),\n    outputs: toInvokeArray(toInvoke(TransformCellOutput)),\n    outputsData: toInvokeArray(invokeSerializeJson),\n    witnesses: toInvokeArray(invokeSerializeJson),\n  });\n\n  if (validation) {\n    validators.ValidateTransaction(transaction, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return transaction;\n}\n\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformRawHeader(\n  rawHeader,\n  { validation = true, debugPath = \"raw_header\" } = {}\n) {\n  rawHeader = transformObject(debugPath, rawHeader, {\n    version: invokeSerializeJson,\n    compactTarget: invokeSerializeJson,\n    timestamp: invokeSerializeJson,\n    number: invokeSerializeJson,\n    epoch: invokeSerializeJson,\n    parentHash: invokeSerializeJson,\n    transactionsRoot: invokeSerializeJson,\n    proposalsHash: invokeSerializeJson,\n    extraHash: invokeSerializeJson,\n    dao: invokeSerializeJson,\n  });\n\n  if (validation) {\n    validators.ValidateRawHeader(rawHeader, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return rawHeader;\n}\n\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformHeader(\n  header,\n  { validation = true, debugPath = \"header\" } = {}\n) {\n  header = transformObject(debugPath, header, {\n    version: invokeSerializeJson,\n    compactTarget: invokeSerializeJson,\n    timestamp: invokeSerializeJson,\n    number: invokeSerializeJson,\n    epoch: invokeSerializeJson,\n    parentHash: invokeSerializeJson,\n    transactionsRoot: invokeSerializeJson,\n    proposalsHash: invokeSerializeJson,\n    extraHash: invokeSerializeJson,\n    dao: invokeSerializeJson,\n    nonce: invokeSerializeJson,\n  });\n\n  if (validation) {\n    validators.ValidateHeader(header, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return header;\n}\n\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformUncleBlock(\n  uncleBlock,\n  { validation = true, debugPath = \"uncle_block\" } = {}\n) {\n  uncleBlock = transformObject(debugPath, uncleBlock, {\n    header: toInvoke(TransformHeader),\n    proposals: toInvokeArray(invokeSerializeJson),\n  });\n\n  if (validation) {\n    validators.ValidateUncleBlock(uncleBlock, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return uncleBlock;\n}\n\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformBlock(\n  block,\n  { validation = true, debugPath = \"block\" } = {}\n) {\n  block = transformObject(debugPath, block, {\n    header: toInvoke(TransformHeader),\n    uncles: toInvokeArray(toInvoke(TransformUncleBlock)),\n    transactions: toInvokeArray(toInvoke(TransformTransaction)),\n    proposals: toInvokeArray(invokeSerializeJson),\n  });\n\n  if (validation) {\n    validators.ValidateBlock(block, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return block;\n}\n\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformCellbaseWitness(\n  cellbaseWitness,\n  { validation = true, debugPath = \"cellbase_witness\" } = {}\n) {\n  cellbaseWitness = transformObject(debugPath, cellbaseWitness, {\n    lock: toInvoke(TransformScript),\n    message: invokeSerializeJson,\n  });\n\n  if (validation) {\n    validators.ValidateCellbaseWitness(cellbaseWitness, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return cellbaseWitness;\n}\n\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function TransformWitnessArgs(\n  witnessArgs,\n  { validation = true, debugPath = \"witness_args\" } = {}\n) {\n  witnessArgs = transformObject(debugPath, witnessArgs, {\n    lock: invokeSerializeJson,\n    inputType: invokeSerializeJson,\n    outputType: invokeSerializeJson,\n  });\n\n  if (validation) {\n    validators.ValidateWitnessArgs(witnessArgs, {\n      debugPath: `(transformed) ${debugPath}`,\n    });\n  }\n  return witnessArgs;\n}\n"],"mappings":"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","ignoreList":[]}