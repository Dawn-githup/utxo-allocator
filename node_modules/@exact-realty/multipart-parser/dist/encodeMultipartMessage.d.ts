import type { TTypedArray } from './types/index.js';
type TIterable<T> = AsyncIterable<T> | Iterable<T>;
export type TDecodedMultipartMessage = {
    headers: Headers;
    body?: TTypedArray | ArrayBuffer | Blob | ReadableStream | null;
    parts?: TIterable<TDecodedMultipartMessage>;
};
export declare const liberalBoundaryMatchRegex: RegExp;
declare const encodeMultipartMessage: (boundary: string, msg: TIterable<TDecodedMultipartMessage>) => ReadableStream<ArrayBuffer>;
export default encodeMultipartMessage;
//# sourceMappingURL=encodeMultipartMessage.d.ts.map