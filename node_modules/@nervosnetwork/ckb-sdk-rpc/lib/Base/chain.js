"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const paramsFormatter_js_1 = (0, tslib_1.__importDefault)(require("../paramsFormatter.js"));
const resultFormatter_js_1 = (0, tslib_1.__importDefault)(require("../resultFormatter.js"));
exports.default = {
    getTipBlockNumber: {
        method: 'get_tip_block_number',
        paramsFormatters: [],
        resultFormatters: resultFormatter_js_1.default.toNumber,
    },
    getTipHeader: {
        method: 'get_tip_header',
        paramsFormatters: [],
        resultFormatters: resultFormatter_js_1.default.toHeader,
    },
    getCurrentEpoch: {
        method: 'get_current_epoch',
        paramsFormatters: [],
        resultFormatters: resultFormatter_js_1.default.toEpoch,
    },
    getEpochByNumber: {
        method: 'get_epoch_by_number',
        paramsFormatters: [paramsFormatter_js_1.default.toNumber],
        resultFormatters: resultFormatter_js_1.default.toEpoch,
    },
    getBlockHash: {
        method: 'get_block_hash',
        paramsFormatters: [paramsFormatter_js_1.default.toNumber],
    },
    getBlock: {
        method: 'get_block',
        paramsFormatters: [paramsFormatter_js_1.default.toHash],
        resultFormatters: resultFormatter_js_1.default.toBlock,
    },
    getBlockByNumber: {
        method: 'get_block_by_number',
        paramsFormatters: [paramsFormatter_js_1.default.toNumber],
        resultFormatters: resultFormatter_js_1.default.toBlock,
    },
    getHeader: {
        method: 'get_header',
        paramsFormatters: [paramsFormatter_js_1.default.toHash],
        resultFormatters: resultFormatter_js_1.default.toHeader,
    },
    getHeaderByNumber: {
        method: 'get_header_by_number',
        paramsFormatters: [paramsFormatter_js_1.default.toNumber],
        resultFormatters: resultFormatter_js_1.default.toHeader,
    },
    getLiveCell: {
        method: 'get_live_cell',
        paramsFormatters: [paramsFormatter_js_1.default.toOutPoint],
        resultFormatters: resultFormatter_js_1.default.toLiveCellWithStatus,
    },
    getTransaction: {
        method: 'get_transaction',
        paramsFormatters: [paramsFormatter_js_1.default.toHash],
        resultFormatters: resultFormatter_js_1.default.toTransactionWithStatus,
    },
    getCellbaseOutputCapacityDetails: {
        method: 'get_cellbase_output_capacity_details',
        paramsFormatters: [paramsFormatter_js_1.default.toHash],
        resultFormatters: resultFormatter_js_1.default.toCellbaseOutputCapacityDetails,
    },
    getBlockEconomicState: {
        method: 'get_block_economic_state',
        paramsFormatters: [paramsFormatter_js_1.default.toHash],
        resultFormatters: resultFormatter_js_1.default.toBlockEconomicState,
    },
    getTransactionProof: {
        method: 'get_transaction_proof',
        paramsFormatters: [paramsFormatter_js_1.default.toArray(paramsFormatter_js_1.default.toHash), paramsFormatter_js_1.default.toOptional(paramsFormatter_js_1.default.toHash)],
        resultFormatters: resultFormatter_js_1.default.toTransactionProof,
    },
    verifyTransactionProof: {
        method: 'verify_transaction_proof',
        paramsFormatters: [paramsFormatter_js_1.default.toTransactionProof],
    },
    getConsensus: {
        method: 'get_consensus',
        paramsFormatters: [],
        resultFormatters: resultFormatter_js_1.default.toConsensus,
    },
};
//# sourceMappingURL=chain.js.map